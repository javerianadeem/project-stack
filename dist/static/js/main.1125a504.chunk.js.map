{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignOutLinks","state","console","log","firebase","links","uid","SignedOutLinks","trigger","options","closeOnClick","Notifications","notifications","map","noti","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","React","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","required","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","firebaseConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gRA0BeA,cAAQ,MAPI,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAMD,GCJV,SAACA,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAGnBC,OAAOH,UAAUI,MAAK,WAC7BL,EAAS,CAAEM,KAAM,8BDKRP,EArBO,SAACQ,GACrB,OACE,wBAAIC,UAAU,MACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBACJ,4BAAI,kBAAC,IAAD,CAASC,QAASH,EAAMN,QAASQ,GAAG,WAApC,YACJ,4BACE,kBAAC,IAAD,CAASA,GAAG,IAAID,UAAU,sDAAsDD,EAAMI,QAAQC,eECvFC,EATM,WACnB,OACE,wBAAIL,UAAU,MACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,Y,SC+BKV,eAPS,SAACe,GAEvB,OADAC,QAAQC,IAAIF,GACL,CACLV,KAAMU,EAAMG,SAASb,KACrBO,QAASG,EAAMG,SAASN,WAGbZ,EA9BA,SAACQ,GAAW,IACjBH,EAAkBG,EAAlBH,KAAMO,EAAYJ,EAAZI,QAERO,EAAQd,EAAKe,IAAM,kBAAC,EAAD,CAAeR,QAASA,IAAc,kBAACS,EAAD,MAC/D,OACE,6BACE,yBAAKZ,UAAU,0CACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,gBACA,0BAAMA,UAAU,sBAAsBU,GACtC,kBAAC,UAAD,CAASG,QAAS,uBAAGb,UAAU,6CAA4C,uBAAGA,UAAU,kBAAb,SAC1Ec,QAAS,CAAEC,cAAc,IACxB,kBAAC,cAAD,KACKL,U,yDCMFM,EAzBO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACvB,OACE,yBAAKjB,UAAU,WACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,+BACb,6CACA,wBAAIA,UAAU,iBACXiB,GAAiBA,EAAcC,KAAI,SAAAC,GAClC,OACE,wBAAIC,IAAKD,EAAKE,IACZ,0BAAMrB,UAAU,kBAAkBmB,EAAKG,MACvC,0BAAMtB,UAAU,aAAhB,IAA8BmB,EAAKI,SACnC,yBAAKvB,UAAU,uBACZwB,IAAOL,EAAKM,KAAKC,UAAUC,oBCEjCC,EAdQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAExB,OACE,yBAAK7B,UAAU,qDACb,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,cAAc6B,EAAQC,OAEtC,wCAAcD,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChD,uBAAGhC,UAAU,aAAawB,IAAOK,EAAQI,UAAUP,UAAUQ,eCOtDC,EAfK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,yBAAKpC,UAAU,wBACZoC,GAAYA,EAASlB,KAAI,SAAAW,GACxB,OACE,kBAAC,IAAD,CAAM5B,GAAI,YAAc4B,EAAQR,GAAID,IAAKS,EAAQR,IAC/C,kBAAC,EAAD,CAAgBQ,QAASA,EAAST,IAAKS,EAAQR,W,gBCDrDgB,E,iLACM,IAAD,EACmCC,KAAKvC,MAAvCqC,EADD,EACCA,SAAUxC,EADX,EACWA,KAAMqB,EADjB,EACiBA,cACxB,OAAKrB,EAAKe,IAER,yBAAKX,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAaoC,SAAUA,KAEzB,yBAAKpC,UAAU,wBACb,kBAAC,EAAD,CAAeiB,cAAeA,OARhB,kBAAC,IAAD,CAAUhB,GAAG,gB,GAHfsC,IAAMC,WA2BfC,cACblD,aATsB,SAACe,GACvB,MAAO,CACL8B,SAAU9B,EAAMoC,UAAUC,QAAQP,SAClCxC,KAAMU,EAAMG,SAASb,KACrBqB,cAAeX,EAAMoC,UAAUC,QAAQ1B,kBAMzC2B,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJhDL,CAMbJ,GCIaI,cACblD,aAZsB,SAACe,EAAO0C,GAE9B,IAAM3B,EAAK2B,EAASC,MAAMC,OAAO7B,GAC3Be,EAAW9B,EAAMoC,UAAUS,KAAKf,SAEtC,MAAO,CACLP,QAFcO,EAAWA,EAASf,GAAM,KAGxCzB,KAAMU,EAAMG,SAASb,SAMvBgD,2BAAiB,CAAC,CAChBC,WAAY,cAHDJ,EAtCQ,SAAC1C,GAAW,IACzB8B,EAAkB9B,EAAlB8B,QACR,OAD0B9B,EAATH,KACPe,IACNkB,EAEA,yBAAK7B,UAAU,qCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAc6B,EAAQC,OACtC,2BAAID,EAAQN,UAEd,yBAAKvB,UAAU,yBACb,0CAAgB6B,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClD,6BAAMR,IAAOK,EAAQI,UAAUP,UAAUQ,eAO/C,yBAAKlC,UAAU,oBACb,kDAnBgB,kBAAC,IAAD,CAAUC,GAAG,e,QCJ/BmD,E,2MACJ9C,MAAQ,CACN+C,MAAO,GACPC,SAAU,I,EAEZC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOrC,GAAKmC,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAK9D,MAAM+D,OAAO,EAAKxD,Q,wEAEf,IAAD,EACqBgC,KAAKvC,MAAzBgE,EADD,EACCA,UACR,OAFO,EACYnE,KACVe,IAAY,kBAAC,IAAD,CAAUV,GAAG,MAEhC,yBAAKD,UAAU,aACb,0BAAMgE,SAAU1B,KAAKsB,aAAc5D,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAOiE,QAAQ,SAAf,SACA,2BAAOnE,KAAK,QAAQuB,GAAG,QAAQ6C,SAAU5B,KAAKiB,gBAEhD,yBAAKvD,UAAU,eACb,2BAAOiE,QAAQ,YAAf,YACA,2BAAOnE,KAAK,WAAWuB,GAAG,WAAW6C,SAAU5B,KAAKiB,gBAEtD,yBAAKvD,UAAU,eACb,4BAAQA,UAAU,kCAAlB,SACA,yBAAKA,UAAU,mBACZ+D,EAAY,2BAAIA,GAAiB,a,GAhC3BvB,aAsDNjD,eAZS,SAACe,GACvB,MAAO,CACLyD,UAAWzD,EAAMV,KAAKmE,UACtBnE,KAAMU,EAAMG,SAASb,SAGE,SAACJ,GAC1B,MAAO,CACLsE,OAAQ,SAACK,GAAD,OAAW3E,GRrDA4E,EQqDgBD,ERpD9B,SAAC3E,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAEnBC,OAAOyE,2BACdD,EAAYf,MACZe,EAAYd,UACZzD,MAAK,WACLL,EAAS,CAAEM,KAAM,qBAChBwE,OAAM,SAACC,GACR/E,EAAS,CAAEM,KAAM,cAAeyE,cAThB,IAACH,MQyDR7E,CAA6C6D,GCtDtDoB,E,2MACJlE,MAAQ,CACN+C,MAAO,GACPC,SAAU,GACVmB,UAAW,GACXC,SAAU,I,EAEZnB,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOrC,GAAKmC,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAK9D,MAAM4E,OAAO,EAAKrE,Q,wEAEf,IAAD,EACqBgC,KAAKvC,MAAzBH,EADD,EACCA,KAAMmE,EADP,EACOA,UACd,OAAInE,EAAKe,IAAY,kBAAC,IAAD,CAAUV,GAAG,MAEhC,yBAAKD,UAAU,aACb,0BAAMgE,SAAU1B,KAAKsB,aAAc5D,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAOiE,QAAQ,aAAf,cACA,2BAAOnE,KAAK,OAAOuB,GAAG,YAAY6C,SAAU5B,KAAKiB,aAAcqB,UAAQ,KAEzE,yBAAK5E,UAAU,eACb,2BAAOiE,QAAQ,YAAf,aACA,2BAAOnE,KAAK,OAAOuB,GAAG,WAAW6C,SAAU5B,KAAKiB,aAAcqB,UAAQ,KAGxE,yBAAK5E,UAAU,eACb,2BAAOiE,QAAQ,SAAf,SACA,2BAAOnE,KAAK,QAAQuB,GAAG,QAAQ6C,SAAU5B,KAAKiB,aAAcqB,UAAQ,KAEtE,yBAAK5E,UAAU,eACb,2BAAOiE,QAAQ,YAAf,YACA,2BAAOnE,KAAK,WAAWuB,GAAG,WAAW6C,SAAU5B,KAAKiB,aAAcqB,UAAQ,KAE5E,yBAAK5E,UAAU,eACb,4BAAQA,UAAU,kCAAlB,YAEF,yBAAKA,UAAU,mBACZ+D,EAAY,2BAAIA,GAAiB,Y,GA5CzBvB,aAkENjD,eAbS,SAACe,GAEvB,OADAC,QAAQC,IAAIF,EAAMV,KAAKmE,WAChB,CACLnE,KAAMU,EAAMG,SAASb,KACrBmE,UAAWzD,EAAMV,KAAKmE,cAIC,SAACvE,GAC1B,MAAO,CACLmF,OAAQ,SAACE,GAAD,OAAarF,ETzCH,SAACqF,GACrB,OAAO,SAACrF,EAAUE,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YAAamF,EAAmB,EAAnBA,aACnCrE,EAAWd,IACX+C,EAAYoC,IAElBrE,EAASb,OAAOmF,+BACdF,EAAQxB,MACRwB,EAAQvB,UACRzD,MAAK,SAACmF,GAEN,OAAOtC,EAAUG,WAAW,SAASoC,IAAID,EAAI1D,KAAKX,KAAKuE,IAAI,CACzDT,UAAWI,EAAQJ,UACnBC,SAAUG,EAAQH,SAClBtE,SAAUyE,EAAQJ,UAAU,GAAKI,EAAQH,SAAS,QAGnD7E,MAAK,WACJL,EAAS,CAAEM,KAAM,sBAChBwE,OAAM,SAACC,GACR/E,EAAS,CAAEM,KAAM,eAAgByE,YSsBPI,CAAOE,QAG1BtF,CAA6CiF,G,8NCvErD,IAAMW,EAAgB,SAACtD,GAC5B,OAAO,SAACrC,EAAUE,EAAX,GAAuD,EAAhCC,YAAiC,IAEvD+C,GAAYoC,EAF0C,EAAnBA,gBAGnC3E,EAAUT,IAAWe,SAASN,QAC9BiF,EAAW1F,IAAWe,SAASb,KAAKe,IAC1C+B,EAAUG,WAAW,YAAYwC,I,yVAAjC,IACKxD,EADL,CAEEE,gBAAiB5B,EAAQsE,UACzBzC,eAAgB7B,EAAQuE,SACxBU,SAAUA,EACVnD,UAAW,IAAIqD,QAGdzF,MAAK,WACJL,EAAS,CAAEM,KAAM,iBAAkB+B,eAEpCyC,OAAM,SAACC,GACN/E,EAAS,CAAEM,KAAM,uBAAwByE,aCb3CgB,E,2MACJjF,MAAQ,CACNwB,MAAO,GACPP,QAAS,I,EAEXgC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOrC,GAAKmC,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBAEF,EAAK9D,MAAMoF,cAAc,EAAK7E,OAC9B,EAAKP,MAAMyF,QAAQC,KAAK,M,wEAIxB,OADiBnD,KAAKvC,MAAdH,KACEe,IAGR,yBAAKX,UAAU,aACb,0BAAMgE,SAAU1B,KAAKsB,aAAc5D,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,sBACA,yBAAKA,UAAU,eACb,2BAAOiE,QAAQ,SAAf,SACA,2BAAOnE,KAAK,OAAOuB,GAAG,QAAQ6C,SAAU5B,KAAKiB,gBAE/C,yBAAKvD,UAAU,eACb,2BAAOiE,QAAQ,WAAf,mBACA,8BAAU5C,GAAG,UAAUrB,UAAU,uBAAuBkE,SAAU5B,KAAKiB,gBAEzE,yBAAKvD,UAAU,eACb,4BAAQA,UAAU,kCAAlB,aAfc,kBAAC,IAAD,CAAUC,GAAG,gB,GAlBXuC,aAwDbjD,eAdS,SAACe,GACvB,MAAO,CACLV,KAAMU,EAAMG,SAASb,SAME,SAACJ,GAC1B,MAAO,CACL2F,cAAe,SAACtD,GAAD,OAAarC,EAAS2F,EAActD,QAIxCtC,CAA6CgG,GCjC7CG,MAnBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAK1F,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2F,OAAK,EAACC,KAAK,IAAIC,UAAWxD,IACjC,kBAAC,IAAD,CAAOuD,KAAK,eAAeC,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWzC,IACjC,kBAAC,IAAD,CAAOwC,KAAK,UAAUC,UAAWrB,IACjC,kBAAC,IAAD,CAAOoB,KAAK,UAAUC,UAAWN,QCPvBQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjD,MACvB,2D,yjBClBN,IAAMkD,EAAY,CAChBpC,UAAW,MAsCEqC,EAnCK,WAAgC,IAA/B9F,EAA8B,uDAAtB6F,EAAWE,EAAW,uCACjD,OAAQA,EAAOvG,MACb,IAAK,cAEH,OADAS,QAAQC,IAAI,gBACL,KACFF,EADL,CAEEyD,UAAW,iBAEf,IAAK,gBAEH,OADAxD,QAAQC,IAAI,iBACL,KACFF,EADL,CAEEyD,UAAW,OAEf,IAAK,kBAEH,OADAxD,QAAQC,IAAI,mBACLF,EACT,IAAK,iBAEH,OADAC,QAAQC,IAAI,kBACL,KACFF,EADL,CAEEyD,UAAW,OAEf,IAAK,eAEH,OADAxD,QAAQC,IAAI,kBACL,KACFF,EADL,CAEEyD,UAAWsC,EAAO9B,IAAI+B,UAG1B,QACE,OAAOhG,ICnCP6F,EAAY,CAChB/D,SAAU,MAiBGmE,EAdQ,WAAgC,IAA/BjG,EAA8B,uDAAtB6F,EAAWE,EAAW,uCACpD,OAAQA,EAAOvG,MACb,IAAK,iBAEH,YADAS,QAAQC,IAAI,kBAAmB6F,EAAOxE,SAExC,IAAK,uBAEH,OADAtB,QAAQC,IAAI,wBAAyB6F,EAAO9B,KACrCjE,EACT,QACE,OAAOA,I,QCAEkG,EAPKC,YAAgB,CAClC7G,KAAMwG,EACNvE,QAAS0E,EACT7D,UAAWgE,mBACXjG,SAAUkG,oB,wCCGZlG,IAASmG,cATY,CACjBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,iBAIvBzG,IAASiC,YAEMjC,QAAf,ECDM0G,EAAQC,YAAYZ,EACxB/D,YACE4E,YAAgBC,IAAMC,kBAAkB,CAAE5H,0BAAamF,+BAGvD0C,6BAAmBC,EAAgB,CAAEC,wBAAwB,EAAMC,YAAa,QAASC,mBAAmB,IAC5GC,yBAAeJ,KAInBN,EAAMW,oBAAoBjI,MAAK,WAC7BkI,IAASC,OAAO,kBAAC,IAAD,CAAUb,MAAOA,GAAO,kBAAC,EAAD,OAAoBc,SAASC,eAAe,YLuGhF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxI,MAAK,SAAAyI,GACjCA,EAAaC,kB","file":"static/js/main.1125a504.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"ul\">\r\n      <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n      <li><NavLink onClick={props.signOut} to=\"/signin\">Log out</NavLink></li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating #fafafa grey lighten-5 black-text\">{props.profile.initials}</NavLink>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n// if I add parentheses to signout on line 10 it will automatically call the function when it loads\r\n//coming from \"a\" tag going to auth actions and then auth reducer\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\n// passing null as first argument because first param is mapStateToProps\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","// import { firestore } from \"firebase\"\r\n\r\nexport const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase()\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS' })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'LOGIN_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase()\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n    })\r\n  }\r\n}\r\n\r\n// passing both firebase and firestore b/c firebase for authenticating user and firestore for creating new users\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase()\r\n    const firestore = getFirestore()\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((res) => {\r\n      // using doc to get the previous id and preventing it to create a new one\r\n      return firestore.collection('users').doc(res.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    })\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' })\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err })\r\n      })\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignOutLinks = () => {\r\n  return (\r\n    <ul className=\"ul\">\r\n      <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n      <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from \"./SignedInLinks\"\r\nimport SignedOutLinks from \"./SignedOutLinks\"\r\nimport { connect } from 'react-redux'\r\nimport { SideNav, SideNavItem } from 'react-materialize'\r\n// import { statement } from '@babel/template'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props\r\n  // console.log(auth)\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n  return (\r\n    <div>\r\n      <nav className=\"nav-wrapper #455a64 blue-grey darken-2\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"brand-logo\">ProjectStack</Link>\r\n          <span className=\"hide-on-small-only\">{links}</span>\r\n          <SideNav trigger={<a className=\"hide-on-med-and-up side-nav show-on-small\"><i className=\"material-icons\">menu</i></a>}\r\n           options={{ closeOnClick: true }}>\r\n            <SideNavItem>\r\n                {links}\r\n            </SideNavItem>\r\n          </SideNav>\r\n        </div>\r\n      </nav>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\nconst Notifications = ({ notifications }) => {\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-2 #fafafa grey lighten-5\">\r\n        <div className=\"card-content blue-grey-text\">\r\n          <h5>Notifications</h5>\r\n          <ul className=\"notifications\">\r\n            {notifications && notifications.map(noti => {\r\n              return (\r\n                <li key={noti.id}>\r\n                  <span className=\"blue-grey-text\">{noti.user}</span>\r\n                  <span className=\"grey-text\"> {noti.content}</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(noti.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n\r\n  return (\r\n    <div className=\"z-depth-2 card blue-grey darken-1 project-summary\">\r\n      <div className=\"card-content white-text\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        {/* <h6>{project.content}</h6> */}\r\n        <p>Posted By {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id} key={project.id}>\r\n            <ProjectSummary project={project} key={project.id} />\r\n          </Link>\r\n        )\r\n\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from \"../projects/ProjectList\"\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends React.Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth, // here using it for guardind routes\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] } // for displaying notfications and passing data to notification component\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to='/signin' />\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{\r\n    collection: 'projects'\r\n  }])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn #455a64 blue-grey darken-2\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.signUp(this.state)\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} required />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} required />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} required />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} required />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn #455a64 blue-grey darken-2\">Sign Up</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state.auth.authError)\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to database\r\n    const firestore = getFirestore()\r\n    const profile = getState().firebase.profile\r\n    const authorId = getState().firebase.auth.uid\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n\r\n    })\r\n      .then(() => {\r\n        dispatch({ type: 'CREATE_PROJECT', project })\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n      })\r\n\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    // console.log(this.state)\r\n    this.props.createProject(this.state)\r\n    this.props.history.push('/')\r\n  }\r\n  render() {\r\n    const { auth } = this.props\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create New project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn #455a64 blue-grey darken-2\">Create</button>\r\n          </div>\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth // here using it for guardind routes\r\n  }\r\n}\r\n\r\n//project is stored in props\r\n// this func is calling from above handleSubmit function\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from \"./components/auth/SignIn\"\nimport SignUp from \"./components/auth/SignUp\"\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('login failed')\r\n      return {\r\n        ...state,\r\n        authError: 'Login Failed'\r\n      }\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log(\"signout success\")\r\n      return state\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log(\"signup success\")\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n      console.log('sign up failed')\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n  projects: null\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('created projwct', action.project)\r\n      return\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('created project error', action.err)\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDb0uTHYMvyog_MJfdczJKbI5rnGJ4GXSM\",\r\n    authDomain: \"project-stack-2b2bd.firebaseapp.com\",\r\n    databaseURL: \"https://project-stack-2b2bd.firebaseio.com\",\r\n    projectId: \"project-stack-2b2bd\",\r\n    storageBucket: \"project-stack-2b2bd.appspot.com\",\r\n    messagingSenderId: \"418927639634\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig)\r\nfirebase.firestore()\r\n\r\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\n//thunk is going to the project actions file\n//tthunk also returns a store enhancer beacuse it as a middleware\n// we can combine multiple enhancers using \"compose\"\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })\n    ),\n    // useFirestorefor profile is for syncing data to profile property\n    reactReduxFirebase(firebaseConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }),\n    reduxFirestore(firebaseConfig)\n  )\n)\n// using firebase auth ready so that firebase will load first then the component will load\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n})\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}